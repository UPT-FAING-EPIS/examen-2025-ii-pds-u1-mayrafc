name: Generate Infrastructure Diagram

on:
  push:
    branches: [main]  # Cambié de [ main ] a [main] como en tu workflow que funciona
    paths:
      - 'terraform/**'
  workflow_dispatch:

jobs:
  diagram:
    name: Generate Infrastructure Diagram  # Agregué name explícito
    runs-on: ubuntu-latest
    
    # Removed permissions section to test - sometimes this can cause issues
    
    steps:
    - name: Checkout repo  # Cambié el nombre para que sea más consistente
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install diagrams
        
    - name: Generate Infrastructure Diagram
      run: |
        cat > generate_diagram.py << 'EOF'
        from diagrams import Diagram, Cluster, Edge
        from diagrams.onprem.client import Users
        from diagrams.onprem.database import PostgreSQL
        from diagrams.onprem.inmemory import Redis
        from diagrams.onprem.network import Nginx
        from diagrams.programming.framework import React
        from diagrams.programming.language import Csharp
        from diagrams.saas.cdn import Cloudflare
        from diagrams.generic.network import Router
        
        print("Starting diagram generation...")
        
        with Diagram("Online Exam Platform Infrastructure", show=False, direction="TB"):
            users = Users("Students/Teachers")
            
            with Cluster("GitHub Pages"):
                frontend = React("React Frontend")
            
            with Cluster("Railway Platform"):
                with Cluster("Backend Services"):
                    api = Csharp(".NET API")
                
                with Cluster("Data Layer"):
                    db = PostgreSQL("PostgreSQL")
                    cache = Redis("Redis Cache")
            
            cdn = Cloudflare("CDN")
            lb = Router("Load Balancer")
            
            users >> cdn >> frontend
            frontend >> Edge(label="API Calls") >> lb >> api
            api >> Edge(label="Read/Write") >> db
            api >> Edge(label="Cache") >> cache
            
        print("Diagram generated successfully!")
        EOF
        
        python generate_diagram.py
        
        # Verificar que el archivo se generó
        if [ -f "online_exam_platform_infrastructure.png" ]; then
          echo "✅ Diagram file generated successfully"
          ls -la online_exam_platform_infrastructure.png
        else
          echo "❌ Diagram file was not generated"
          exit 1
        fi
        
    - name: Upload diagram
      uses: actions/upload-artifact@v4
      with:
        name: infrastructure-diagram
        path: online_exam_platform_infrastructure.png
        retention-days: 90
        
    - name: Commit diagram
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Crear directorio docs si no existe
        mkdir -p docs/
        
        # Copiar el diagrama
        cp online_exam_platform_infrastructure.png docs/
        
        # Agregar y commitear solo si hay cambios
        git add docs/online_exam_platform_infrastructure.png
        
        if ! git diff --staged --quiet; then
          git commit -m "Update infrastructure diagram [skip ci]"
          git push
          echo "✅ Diagram updated and committed"
        else
          echo "ℹ️ No changes to commit"
        fi